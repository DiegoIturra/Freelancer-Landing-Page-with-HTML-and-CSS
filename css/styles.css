/*rem es proporcional a la pantalla del dispositivo a usar , ya que al usar px en dispositivos con una densidad de pixeles muy alta
las letras apenas serian visibles*/

/*crea propiedades de CSS de manera personalizada (custom properties)
para luego usarlas durante el codigo*/
:root{
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris: #757575;
}

/*-------------------------------------------------------------------------------------------------------------------------*/
/*es un pequeño hack para que la conversion de rem a px sea mucho mas facil y que se dapte mejor a todo tipo de pantallas*/
html{
    font-size: 65.5%;

    /*sirve para evitar problemas en los padding cuando cambian el tamaño
    de los elementos*/
    box-sizing: border-box;
}

/*Sirve para evitar que los padding afecten el tamaño de un elemento*/
* , *:before , *:after{
    box-sizing: inherit;
}

body{
    font-size: 16px; /* 1rem = 10px*/
    font-family: 'Krub', sans-serif; /*Se aplica a todos los textos*/
}
/*-------------------------------------------------------------------------------------------------------------------------*/

/*Valores genericos para los h1,h2,h3*/
h1{
    font-size: 3.8rem;
}

h2{
    font-size: 2.8rem;
}

h3{
    font-size: 1.8rem;
}

h1,h2,h3{
    text-align: center;
}


/*Esto busca los span dentro de la clase titulo y le asigna los estilos definidos*/
.titulo span{
    font-size: 2rem; /*tamaño de la letra de la etiqueta span*/
}

/*Clase estandar para poder centrar los elementos en la pagina*/
.contenedor{
    max-width: 120rem; /*Como maximo toma este tamaño*/
    margin: 0 auto 0 auto; /*Arriba->derecha->abajo->izquierda (sentido horario)*/
}

.nav-bg{
    background-color: var(--secundario);
}

/*Clase del nav principal*/
.navegacion-principal{
    display: flex;
    flex-direction: column;
}

/*Decora los enlaces dentro de la clase navegacion-principal*/
.navegacion-principal a{
    display: block;
    color: var(--blanco);
    text-decoration: none;
    text-align: center;
    font-size: 2rem;
    font-weight: 700;
    padding: 1rem; /*padding a los 4 lados*/
}


/*Cuando se pasa el cursor sobre el enlace cambia de color*/
.navegacion-principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}

/************ Responsive Design para pc **********************/
@media (min-width: 768px){

    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between; /*es necesario solo en version pc*/
    }
}

/************* Seccion titulo principal e imagen *****************/
.hero{
    /*al usar un section la imagen se adapta al tamaño del contenedor*/
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat; /*No se repite la imagen*/
    background-size: cover; /*Establece el tamaño de la imagen*/
    height: 45rem;

    /*Se agrega pos relativa al padre para luego poder asignarle
    una posicion absoluta al contenido hijo , el cual corresponde
    al div con la imagen*/
    position: relative;
}

.contenido-hero{
    position: absolute;
    background-color: rgba(0,0,0,0.5);

    /*El div usa todo el espacio disponible por el contenedor padre*/
    width: 100%;
    height: 100%;


    /*estas 4 instrucciones se pueden usar siempre para alinear elementos
    de forma vertical y horizontalemnte en el centro*/
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/*modifica tanto el h2 y p dentro de la clase contenido-hero*/
.contenido-hero h2 , .contenido-hero p{
    color: var(--blanco);
}

.contenido-hero a{
    text-decoration: none;
    color: var(--blanco);
    padding: 1rem 2rem;
    border-radius: 2rem;
    border: var(--secundario) solid;
    text-transform: uppercase;
}

.contenido-hero a:hover{
    font-weight: bolder;
    background-color: var(--secundario);
}